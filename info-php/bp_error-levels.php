<!DOCTYPE html>
	<html lang="en">
	<head>
	  <meta name="description" content="PHP 7 Errors Levels">
	  <meta name="keywords" content="php,backend,Errors Levels">
	  <meta name="author" content="webschooltoday.com">
    <title>PHP 7 Errors Levels - WebSchool Today</title>
 <?php include "../links.php" ?></head>
<body>
<div>
<div class="tital">PHP 7 Errors Levels</div>    
<?php include "../head_part.php" ?> 

    <div class="rg3-w clearfix"> 

<?php include "info_php.php" ?>
        <div class="rg3-sec_main">
            <div class="rg3-sec_u">
                <div class="rg3-sec_i">
                    
</div>
<a href="javascript:void(0);" class="next-page disabled" title="Go to Next Page : Disabled"><i class="fa fa-arrow-right" aria-hidden="true"></i></a>

                <a href="bp_filters.php" class="previous-page" title="Go to Previous Page"><i class="fa fa-arrow-left" aria-hidden="true"></i></a>
                <h1>PHP 7 <span>Error Levels</span></h1>
                <p class="summary">There are sixteen different error levels (i.e. types) are available in PHP.</p>
                <h2>Error Levels in PHP</h2>
                <p>Usually, whenever the PHP engine encounters a problem that prevents a script from running properly it generate an error message. There are sixteen different error levels and each level is represented by an integer value and an associated constant. Here's a list of error levels:</p>
                <div class="shadow">
                    <table class="data">
                        <tr>
                            <th>Error Level</th>
                            <th>Value</th>
                            <th>Description</th>
                        </tr>
                        <tr>
                            <td>E_ERROR</td>
                            <td>1</td>
                            <td>A fatal run-time error, that can't be recovered from. The execution of the script is stopped immediately.</td>
                        </tr>
                        <tr>
                            <td>E_WARNING</td>
                            <td>2</td>
                            <td>A run-time warning. It is non-fatal and most errors tend to fall into this category. The execution of the script is not stopped.</td>
                        </tr>
                        <tr>
                            <td>E_PARSE</td>
                            <td>4</td>
                            <td>The compile-time parse error. Parse errors should only be generated by the parser.</td>
                        </tr>
                        <tr>
                            <td>E_NOTICE</td>
                            <td>8</td>
                            <td>A run-time notice indicating that the script encountered something that could possibly an error, although the situation could also occur when running a script normally.</td>
                        </tr>
                        <tr>
                            <td>E_CORE_ERROR</td>
                            <td>16</td>
                            <td>A fatal error that occur during the PHP's engine initial startup. This is like an E_ERROR, except it is generated by the core of PHP.</td>
                        </tr>
                        <tr>
                            <td>E_CORE_WARNING</td>
                            <td>32</td>
                            <td>A non-fatal error that occur during the PHP's engine initial startup. This is like an E_WARNING, except it is generated by the core of PHP.</td>
                        </tr>
                        <tr>
                            <td>E_COMPILE_ERROR</td>
                            <td>64</td>
                            <td>A fatal error that occur while the script was being compiled. This is like an E_ERROR, except it is generated by the Zend Scripting Engine.</td>
                        </tr>
                        <tr>
                            <td>E_COMPILE_WARNING</td>
                            <td>128</td>
                            <td>A non-fatal error occur while the script was being compiled. This is like an E_WARNING, except it is generated by the Zend Scripting Engine.</td>
                        </tr>
                        <tr>
                            <td>E_USER_ERROR</td>
                            <td>256</td>
                            <td>A fatal user-generated error message. This is like an E_ERROR, except it is generated by the PHP code using the function trigger_error() rather than the PHP engine.</td>
                        </tr>
                        <tr>
                            <td>E_USER_WARNING</td>
                            <td>512</td>
                            <td>A non-fatal user-generated warning message. This is like an E_WARNING, except it is generated by the PHP code using the function trigger_error() rather than the PHP engine</td>
                        </tr>
                        <tr>
                            <td>E_USER_NOTICE</td>
                            <td>1024</td>
                            <td>A user-generated notice message. This is like an E_NOTICE, except it is generated by the PHP code using the function trigger_error() rather than the PHP engine.</td>
                        </tr>
                        <tr>
                            <td>E_STRICT</td>
                            <td>2048</td>
                            <td>Not strictly an error, but triggered whenever PHP encounters code that could lead to problems or forward incompatibilities</td>
                        </tr>
                        <tr>
                            <td>E_RECOVERABLE_ERROR</td>
                            <td>4096</td>
                            <td>A catchable fatal error. Although the error was fatal, it did not leave the PHP engine in an unstable state. If the error is not caught by a user defined error handler (see set_error_handler()), the application aborts as it was an E_ERROR.</td>
                        </tr>
                        <tr>
                            <td>E_DEPRECATED</td>
                            <td>8192</td>
                            <td>A run-time notice indicating that the code will not work in future versions of PHP</td>
                        </tr>
                        <tr>
                            <td>E_USER_DEPRECATED</td>
                            <td>16384</td>
                            <td>A user-generated warning message. This is like an E_DEPRECATED, except it is generated by the PHP code using the function trigger_error() rather than the PHP engine.</td>
                        </tr>
                        <tr>
                            <td>E_ALL</td>
                            <td>32767</td>
                            <td>All errors and warnings, except of level E_STRICT prior to PHP 5.4.0.</td>
                        </tr>
                    </table>
                </div>
                <div class="bottom-link clearfix">
                    <a href="bp_filters.php" class="previous-page-bottom"><i class="fa fa-arrow-left" aria-hidden="true"></i> Previous</a>
                    <a href="javascript:void(0);" class="next-page-bottom disabled" title="Disabled" style="float: right;">Next <i class="fa fa-arrow-right" aria-hidden="true"></i></a>
                    </div>
            </div>
        </div>        
        <div class="sidebar">
            
        </div>
    </div> 
</div>
	<?php include "../footer.php" ?>

</body>
</html>